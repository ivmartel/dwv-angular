{"version":3,"file":"dwv-angular.mjs","sources":["../../../projects/dwv-angular/src/lib/tags-table.component.ts","../../../projects/dwv-angular/src/lib/tags-table.component.html","../../../projects/dwv-angular/src/lib/tags-dialog.component.ts","../../../projects/dwv-angular/src/lib/tags-dialog.component.html","../../../projects/dwv-angular/src/lib/dwv-angular.component.ts","../../../projects/dwv-angular/src/lib/dwv-angular.component.html","../../../projects/dwv-angular/src/public-api.ts","../../../projects/dwv-angular/src/dwv-angular.ts"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataElement, getTagFromKey } from 'dwv';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'dwv-tags-table',\n  standalone: true,\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatSliderModule\n  ],\n  styleUrls: ['./tags-table.component.scss'],\n  templateUrl: './tags-table.component.html'\n})\n\nexport class TagsTableComponent {\n  private _fullMetaData!: Record<string, DataElement>;\n\n  public min!: number;\n  public max!: number;\n  public instanceNumber = 0;\n  private instanceNumbers!: number[];\n  private keys!: string[];\n\n  @Input()\n  set data(value: Record<string, DataElement>) {\n    this._fullMetaData = value;\n    // store keys (to not recreate them)\n    this.keys = Object.keys(this._fullMetaData);\n\n    const instanceElement = this._fullMetaData['00200013'];\n    if (typeof instanceElement !== 'undefined') {\n      // set slider with instance numbers ('00200013')\n      let instanceNumberValue = instanceElement.value;\n      if (typeof instanceNumberValue === 'string') {\n        instanceNumberValue = [instanceNumberValue];\n      }\n      // convert string to numbers\n      this.instanceNumbers = instanceNumberValue.map(Number);\n      this.instanceNumbers.sort((a: number, b: number) => a - b);\n      // store\n      this.min = 0;\n      this.max = this.instanceNumbers.length - 1;\n      this.instanceNumber = this.instanceNumbers[this.min];\n    }\n    // set data source\n    this.setDataSource(this.instanceNumber);\n  }\n\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n\n  public displayedColumns: string[] = ['name', 'value'];\n\n  public dataSource!: MatTableDataSource<SimpleDataElement>;\n\n  setDataSource(instanceNumber: number) {\n    // update member (to update html)\n    this.instanceNumber = instanceNumber;\n    // get instance meta data\n    const metaData = this.getMetaArray(instanceNumber)\n    // keep previous filter if defined\n    let filter = '';\n    if (this.dataSource) {\n      filter = this.dataSource.filter;\n    }\n    // create data source\n    this.dataSource = new MatTableDataSource<SimpleDataElement>(metaData);\n    this.dataSource.sort = this.sort;\n    this.dataSource.filter = filter;\n  }\n\n  onkeyup(event: Event) {\n    if (event.target instanceof HTMLInputElement) {\n      this.applyFilter(event.target.value);\n    }\n  }\n\n  applyFilter(filterValue: string) {\n     // Remove whitespace\n    filterValue = filterValue.trim();\n     // MatTableDataSource defaults to lowercase matches\n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n\n  onsliderchange(event: Event) {\n    const sliderValue = parseInt((event.target as HTMLInputElement).value, 10);\n    this.setDataSource(this.instanceNumbers[sliderValue]);\n  }\n\n  getMetaArray(instanceNumber: number): SimpleDataElement[] {\n    let reducer;\n    if (this.isDicomMeta(this._fullMetaData)) {\n      reducer = this.getDicomTagReducer(this._fullMetaData, instanceNumber, '');\n    } else {\n      reducer = this.getTagReducer(this._fullMetaData);\n    }\n    return this.keys.reduce(reducer, []);\n  }\n\n  private isDicomMeta(meta: Record<string, DataElement>) {\n    return typeof meta['00020010'] !== 'undefined';\n  }\n\n  private getTagReducer(tagData: Record<string, DataElement>) {\n    return function (accumulator: SimpleDataElement[], currentValue: string) {\n      accumulator.push({\n        name: currentValue,\n        value: tagData[currentValue].value\n      });\n      return accumulator;\n    };\n  }\n\n  private getDicomTagReducer(tagData: Record<string, DataElement>, instanceNumber: number, prefix: string) {\n    return (accumulator: SimpleDataElement[], currentValue: string) => {\n      const tag = getTagFromKey(currentValue);\n      let key = tag.getNameFromDictionary();\n      if (typeof key === 'undefined') {\n        // add 'x' to help sorting\n        key = 'x' + tag.getKey();\n      }\n      const name = key;\n      const element = tagData[currentValue];\n      // recurse for sequence\n      if (element.vr === 'SQ') {\n        // sequence tag\n        accumulator.push({\n          name: (prefix ? prefix + ' ' : '') + name,\n          value: ''\n        });\n        // sequence value\n        for (let i = 0; i < element.value.length; ++i) {\n          const sqItems = element.value[i];\n          const keys = Object.keys(sqItems);\n          const res = keys.reduce(\n            this.getDicomTagReducer(sqItems, instanceNumber, prefix + '[' + i + ']'), []\n          );\n          accumulator = accumulator.concat(res);\n        }\n      } else {\n        let value;\n        // possible 'merged' object\n        // (use slice method as test for array and typed array)\n        if (typeof element.value.slice === 'undefined' &&\n          typeof element.value[instanceNumber] !== 'undefined') {\n          value = element.value[instanceNumber];\n        }\n        // force instance number (otherwise takes value in non indexed array)\n        if (name === 'InstanceNumber') {\n          value = instanceNumber.toString();\n        }\n        // shorten long 'o'ther data\n        if (element.vr[0] === 'O' && element.value.length > 10) {\n          value = element.value.slice(0, 10).toString() + '... (len:' + element.value.length + ')';\n        }\n        // else\n        if (typeof value === 'undefined') {\n          value = element.value.toString();\n        }\n        // store\n        accumulator.push({\n          name: (prefix ? prefix + ' ' : '') + name,\n          value: value\n        });\n      }\n      return accumulator;\n    }\n  }\n}\n\nclass SimpleDataElement {\n  name!: string;\n  value!: string|string[];\n}\n","<div>\n  <mat-form-field class=\"searchfield\">\n    <input class=\"searchinput\" matInput (keyup)=\"onkeyup($event)\" placeholder=\"Filter\">\n  </mat-form-field>\n  <mat-slider class=\"instanceslider\" id=\"instanceslider\"\n    [min]=\"min\" [max]=\"max\" step=\"1\" showTickMarks=\"true\" matTooltip=\"Instance number\">\n    <input class=\"instanceinput\" matSliderThumb (input)=\"onsliderchange($event)\">\n  </mat-slider>\n  <label for=\"instanceslider\" class=\"instancelabel\" matTooltip=\"Instance number\">{{instanceNumber}}</label>\n\n  <section class=\"container mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z4\">\n      <!-- name column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n      <!-- value column -->\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Value </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n      </ng-container>\n      <!-- row template -->\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </section>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DataElement } from 'dwv';\n\nimport { TagsTableComponent } from './tags-table.component';\nimport { MatDialogTitle, MatDialogContent } from '@angular/material/dialog';\n\nclass DialogData {\n  title!: string;\n  value!: Record<string, DataElement>;\n}\n\n@Component({\n  selector: 'dwv-tags-dialog',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    TagsTableComponent\n  ],\n  templateUrl: './tags-dialog.component.html'\n})\n\nexport class TagsDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<TagsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<mat-dialog-content>\n  <dwv-tags-table [data]=\"data.value\"></dwv-tags-table>\n</mat-dialog-content>\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { VERSION } from '@angular/core';\nimport {\n  App,\n  AppOptions,\n  DataElement,\n  ViewConfig,\n  ToolConfig,\n  decoderScripts,\n  getDwvVersion\n} from 'dwv';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\n\nimport { TagsDialogComponent } from './tags-dialog.component';\n\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n// Image decoders (for web workers)\ndecoderScripts.jpeg2000 = 'assets/dwv/decoders/pdfjs/decode-jpeg2000.js';\ndecoderScripts['jpeg-lossless'] = 'assets/dwv/decoders/rii-mango/decode-jpegloss.js';\ndecoderScripts['jpeg-baseline'] = 'assets/dwv/decoders/pdfjs/decode-jpegbaseline.js';\ndecoderScripts.rle = 'assets/dwv/decoders/dwv/decode-rle.js';\n\nclass DwvEvent {\n  dataid!: string;\n}\n\n@Component({\n  selector: 'dwv-angular',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatIconModule,\n    MatProgressBarModule\n  ],\n  templateUrl: './dwv-angular.component.html',\n  styleUrls: ['./dwv-angular.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class DwvComponent implements OnInit {\n  @Input() showLegend = false;\n  public versions = {\n    dwv: getDwvVersion(),\n    angular: VERSION.full\n  };\n  public tools = {\n      Scroll: new ToolConfig(),\n      ZoomAndPan: new ToolConfig(),\n      WindowLevel: new ToolConfig(),\n      Draw: new ToolConfig(['Ruler']),\n  };\n  public toolNames: string[] = Object.keys(this.tools);\n  public selectedTool = 'Select Tool';\n  public loadProgress = 0;\n  public dataLoaded = false;\n\n  private dwvApp!: App;\n  private metaData!: Record<string, DataElement>;\n\n  private orientation!: string;\n\n  // drop box class name\n  private dropboxDivId = 'dropBox';\n  private dropboxClassName = 'dropBox';\n  private borderClassName = 'dropBoxBorder';\n  private hoverClassName = 'hover';\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {\n    // create app\n    this.dwvApp = new App();\n    // initialise app\n    const viewConfig0 = new ViewConfig('layerGroup0');\n    const viewConfigs = {'*': [viewConfig0]};\n    const options = new AppOptions(viewConfigs);\n    options.tools = this.tools;\n    this.dwvApp.init(options);\n    // handle load events\n    let nLoadItem = 0;\n    let nReceivedLoadError = 0;\n    let nReceivedLoadAbort = 0;\n    let isFirstRender = false;\n    this.dwvApp.addEventListener('loadstart', (/*event*/) => {\n      // reset flags\n      this.dataLoaded = false;\n      nLoadItem = 0;\n      nReceivedLoadError = 0;\n      nReceivedLoadAbort = 0;\n      isFirstRender = true;\n      // hide drop box\n      this.showDropbox(false);\n    });\n    this.dwvApp.addEventListener('loadprogress', (event: ProgressEvent) => {\n      this.loadProgress = event.loaded;\n    });\n    this.dwvApp.addEventListener('renderend', (/*event*/) => {\n      if (isFirstRender) {\n        isFirstRender = false;\n        // available tools\n        let selectedTool = 'ZoomAndPan';\n        if (this.dwvApp.canScroll()) {\n          selectedTool = 'Scroll';\n        }\n        this.onChangeTool(selectedTool);\n      }\n    });\n    this.dwvApp.addEventListener('load', (event: DwvEvent) => {\n      // set dicom tags\n      this.metaData = this.dwvApp.getMetaData(event.dataid) as Record<string, DataElement>;\n      // set data loaded flag\n      this.dataLoaded = true;\n    });\n    this.dwvApp.addEventListener('loadend', (/*event*/) => {\n      if (nReceivedLoadError) {\n        this.loadProgress = 0;\n        alert('Received errors during load. Check log for details.');\n        // show drop box if nothing has been loaded\n        if (!nLoadItem) {\n          this.showDropbox(true);\n        }\n      }\n      if (nReceivedLoadAbort) {\n        this.loadProgress = 0;\n        alert('Load was aborted.');\n        this.showDropbox(true);\n      }\n    });\n    this.dwvApp.addEventListener('loaditem', (/*event*/) => {\n      ++nLoadItem;\n    });\n    this.dwvApp.addEventListener('loaderror', (event: ErrorEvent) => {\n      console.error(event.error);\n      ++nReceivedLoadError;\n    });\n    this.dwvApp.addEventListener('loadabort', (/*event*/) => {\n      ++nReceivedLoadAbort;\n    });\n\n    // handle key events\n    this.dwvApp.addEventListener('keydown', (event: KeyboardEvent) => {\n        this.dwvApp.defaultOnKeydown(event);\n    });\n    // handle window resize\n    window.addEventListener('resize', this.dwvApp.onResize);\n\n    // setup drop box\n    this.setupDropbox();\n\n    // possible load from location\n    this.dwvApp.loadFromUri(window.location.href);\n  }\n\n  /**\n   * Get the icon of a tool.\n   *\n   * @param tool The tool name.\n   * @returns The associated icon string.\n   */\n  getToolIcon = (tool: string) => {\n    let res!: string;\n    if (tool === 'Scroll') {\n      res = 'menu';\n    } else if (tool === 'ZoomAndPan') {\n      res = 'search';\n    } else if (tool === 'WindowLevel') {\n      res = 'contrast';\n    } else if (tool === 'Draw') {\n      res = 'straighten';\n    }\n    return res;\n  }\n\n  /**\n   * Handle a change tool event.\n   * @param tool The new tool name.\n   */\n  onChangeTool = (tool: string) => {\n    if ( this.dwvApp ) {\n      this.selectedTool = tool;\n      this.dwvApp.setTool(tool);\n      if (tool === 'Draw' &&\n        typeof this.tools.Draw.options !== 'undefined') {\n        this.onChangeShape(this.tools.Draw.options[0]);\n      }\n    }\n  }\n\n  /**\n   * Check if a tool can be run.\n   *\n   * @param tool The tool name.\n   * @returns True if the tool can be run.\n   */\n  canRunTool = (tool: string) => {\n    let res: boolean;\n    if (tool === 'Scroll') {\n      res = this.dwvApp.canScroll();\n    } else if (tool === 'WindowLevel') {\n      res = this.dwvApp.canWindowLevel();\n    } else {\n      res = true;\n    }\n    return res;\n  }\n\n  /**\n   * For toogle button to not get selected.\n   *\n   * @param event The toogle change.\n   */\n  onSingleToogleChange = (event: MatButtonToggleChange) => {\n    // unset value -> do not select button\n    event.source.buttonToggleGroup.value = '';\n  }\n\n  /**\n   * Toogle the viewer orientation.\n   */\n  toggleOrientation = () => {\n    if (typeof this.orientation !== 'undefined') {\n      if (this.orientation === 'axial') {\n        this.orientation = 'coronal';\n      } else if (this.orientation === 'coronal') {\n        this.orientation = 'sagittal';\n      } else if (this.orientation === 'sagittal') {\n        this.orientation = 'axial';\n      }\n    } else {\n      // default is most probably axial\n      this.orientation = 'coronal';\n    }\n    // update data view config\n    const viewConfig0 = new ViewConfig('layerGroup0');\n    viewConfig0.orientation = this.orientation;\n    const viewConfigs = {'*': [viewConfig0]};\n    this.dwvApp.setDataViewConfigs(viewConfigs);\n    // render data\n    const dataIds = this.dwvApp.getDataIds();\n    for (const dataId of dataIds) {\n      this.dwvApp.render(dataId);\n    }\n  }\n\n  /**\n   * Handle a change draw shape event.\n   * @param shape The new shape name.\n   */\n  private onChangeShape = (shape: string) => {\n    if ( this.dwvApp && this.selectedTool === 'Draw') {\n      this.dwvApp.setToolFeatures({shapeName: shape});\n    }\n  }\n\n  /**\n   * Handle a reset event.\n   */\n  onReset = () => {\n    if ( this.dwvApp ) {\n      this.dwvApp.resetDisplay();\n    }\n  }\n\n  /**\n   * Open the DICOM tags dialog.\n   */\n  openTagsDialog = () => {\n    this.dialog.open(TagsDialogComponent,\n      {\n        data: {\n          title: 'DICOM Tags',\n          value: this.metaData\n        }\n      }\n    );\n  }\n\n  // drag and drop [begin] -----------------------------------------------------\n\n  /**\n   * Setup the data load drop box: add event listeners and set initial size.\n   */\n  private setupDropbox = () => {\n    this.showDropbox(true);\n  }\n\n  /**\n   * Default drag event handling.\n   * @param event The event to handle.\n   */\n  private defaultHandleDragEvent = (event: DragEvent) => {\n    // prevent default handling\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Handle a drag over.\n   * @param event The event to handle.\n   */\n  private onBoxDragOver = (event: DragEvent) => {\n    this.defaultHandleDragEvent(event);\n    // update box border\n    const box = document.getElementById(this.dropboxDivId);\n    if (box && box.className.indexOf(this.hoverClassName) === -1) {\n        box.className += ' ' + this.hoverClassName;\n    }\n  }\n\n  /**\n   * Handle a drag leave.\n   * @param event The event to handle.\n   */\n  private onBoxDragLeave = (event: DragEvent) => {\n    this.defaultHandleDragEvent(event);\n    // update box border\n    const box = document.getElementById(this.dropboxDivId);\n    if (box && box.className.indexOf(this.hoverClassName) !== -1) {\n        box.className = box.className.replace(' ' + this.hoverClassName, '');\n    }\n  }\n\n  /**\n   * Handle a drop event.\n   * @param event The event to handle.\n   */\n  private onDrop = (event: DragEvent) => {\n    this.defaultHandleDragEvent(event);\n    // load files\n    if (event.dataTransfer) {\n      const files = Array.from(event.dataTransfer.files);\n      this.dwvApp.loadFiles(files);\n    }\n  }\n\n  /**\n   * Handle a an input[type:file] change event.\n   * @param event The event to handle.\n   */\n  private onInputFile = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    if (target && target.files) {\n      const files = Array.from(target.files);\n      this.dwvApp.loadFiles(files);\n    }\n  }\n\n  /**\n   * Show/hide the data load drop box.\n   * @param show True to show the drop box.\n   */\n  private showDropbox = (show: boolean) => {\n    const box = document.getElementById(this.dropboxDivId);\n    if (!box) {\n      return;\n    }\n    const layerDiv = document.getElementById('layerGroup0');\n\n    if (show) {\n      // reset css class\n      box.className = this.dropboxClassName + ' ' + this.borderClassName;\n      // check content\n      if (box.innerHTML === '') {\n        const p = document.createElement('p');\n        p.appendChild(document.createTextNode('Drag and drop data here or '));\n        // input file\n        const input = document.createElement('input');\n        input.onchange = this.onInputFile;\n        input.type = 'file';\n        input.multiple = true;\n        input.id = 'input-file';\n        input.style.display = 'none';\n        const label = document.createElement('label');\n        label.htmlFor = 'input-file';\n        const link = document.createElement('a');\n        link.appendChild(document.createTextNode('click here'));\n        link.id = 'input-file-link';\n        label.appendChild(link);\n        p.appendChild(input);\n        p.appendChild(label);\n\n        box.appendChild(p);\n      }\n      // show box\n      box.setAttribute('style', 'display:initial');\n      // stop layer listening\n      if (layerDiv) {\n        layerDiv.removeEventListener('dragover', this.defaultHandleDragEvent);\n        layerDiv.removeEventListener('dragleave', this.defaultHandleDragEvent);\n        layerDiv.removeEventListener('drop', this.onDrop);\n      }\n      // listen to box events\n      box.addEventListener('dragover', this.onBoxDragOver);\n      box.addEventListener('dragleave', this.onBoxDragLeave);\n      box.addEventListener('drop', this.onDrop);\n    } else {\n      // remove border css class\n      box.className = this.dropboxClassName;\n      // remove content\n      box.innerHTML = '';\n      // hide box\n      box.setAttribute('style', 'display:none');\n      // stop box listening\n      box.removeEventListener('dragover', this.onBoxDragOver);\n      box.removeEventListener('dragleave', this.onBoxDragLeave);\n      box.removeEventListener('drop', this.onDrop);\n      // listen to layer events\n      if (layerDiv) {\n        layerDiv.addEventListener('dragover', this.defaultHandleDragEvent);\n        layerDiv.addEventListener('dragleave', this.defaultHandleDragEvent);\n        layerDiv.addEventListener('drop', this.onDrop);\n      }\n    }\n  }\n\n  // drag and drop [end] -------------------------------------------------------\n\n}\n","<div id=\"dwv\">\n  <mat-progress-bar mode=\"determinate\" value=\"{{ loadProgress }}\"></mat-progress-bar>\n  <div class=\"button-row\">\n    <mat-button-toggle-group name=\"tool\" [disabled]=\"!dataLoaded\">\n      <mat-button-toggle value=\"{{ tool }}\" color=\"primary\"\n        *ngFor=\"let tool of toolNames\"\n        title=\"{{ tool }}\"\n        (click)=\"onChangeTool(tool)\"\n        [disabled]=\"!dataLoaded || !canRunTool(tool)\">\n        <mat-icon>{{ getToolIcon(tool) }}</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n\n    <mat-button-toggle-group name=\"reset\" [disabled]=\"!dataLoaded\"\n      (change)=\"onSingleToogleChange($event)\">\n      <mat-button-toggle color=\"primary\"\n        title=\"Reset\"\n        (click)=\"onReset()\">\n        <mat-icon>refresh</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n\n    <mat-button-toggle-group name=\"reset\" [disabled]=\"!dataLoaded\"\n      (change)=\"onSingleToogleChange($event)\">\n      <mat-button-toggle color=\"primary\"\n        title=\"Toggle Orientation\"\n        (click)=\"toggleOrientation()\">\n        <mat-icon>cameraswitch</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n\n    <mat-button-toggle-group name=\"tags\" [disabled]=\"!dataLoaded\"\n      (change)=\"onSingleToogleChange($event)\">\n      <mat-button-toggle color=\"primary\"\n        title=\"Tags\"\n        (click)=\"openTagsDialog()\">\n        <mat-icon>library_books</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n</div>\n  <div id=\"layerGroup0\" class=\"layerGroup\">\n    <div id=\"dropBox\"></div>\n  </div>\n  <div class=\"legend mat-small\" *ngIf=\"showLegend\">\n    <p>Powered by\n    <a href=\"https://github.com/ivmartel/dwv\">dwv</a>\n    {{ versions.dwv }}\n    and\n    <a href=\"https://github.com/angular/angular\">Angular</a>\n    {{ versions.angular }}\n    </p>\n  </div>\n</div>\n","/*\n * Public API Surface of dwv-angular\n */\n\nexport * from './lib/dwv-angular.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3"],"mappings":"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"}